<?xml version="1.0" encoding="UTF-8" ?>
<Module>
		<ModulePrefs title="Introduction"
			directory_title="Introduction"
			description="A gadget to intro dashboard in JIRA"
			author="zulong">
            <Optional feature="gadget-directory">
                    <Param name="categories">
                            JIRA
                    </Param>
            </Optional>
            <Optional feature="atlassian.util" />
            <Optional feature="auth-refresh" />
            <Require feature="views" />
            <Require feature="dynamic-height"/>
            <Require feature="settitle"/>
            <Require feature="setprefs"/>
            <Require feature="oauthpopup"/>
            #oauth
            <Locale messages="__ATLASSIAN_BASE_URL__/download/resources/org.ingomohr.jira.jira-versions-gadget/i18n/ALL_ALL.xml"/>
		</ModulePrefs>
		<Content type="html" view="profile">
        <![CDATA[
        #requireResource("com.atlassian.jira.gadgets:common")
        #requireResource("com.atlassian.gadgets.publisher:ajs-gadgets")
        #requireResource("org.ingomohr.jira.jira-versions-gadget:jira-versions-gadget-resources")
        #includeResources()
        <style type="text/css">
            #editable-text {
                max-width: 100%; /* 设置最大宽度为 450 像素 */
            }
            #editor-container {
                "display": "flex",
                "flex-flow": "column nowrap",
                "align-items": "center"
            }
        </style>
        <script type="text/javascript">
            let gadget = null;
            
            (function () {
                gadget = AJS.Gadget({
                    baseUrl: "__ATLASSIAN_BASE_URL__",
                    useOauth: "/rest/gadget/1.0/currentUser",
                    id: 'my-gadget',
                    view: {
                        onResizeAdjustHeight: false,
					    onResizeReload: true,
                        template: function(args) {
                            var gadget = this;

                            var dashboardId = window.parent.location.search.match(/selectPageId=(\d+)/)[1];
                            console.log(dashboardId);
                            var gadgetId = gadget.getPrefs().getModuleId();
                            console.log("gadgetId " + gadgetId);

                            gadget.getView().html('<div id="editor-container"></div>');

                            AJS.$.ajax({
                                url: '/rest/api/2/dashboard/' + dashboardId + '/items/' + gadgetId + '/properties/',
                                type: 'GET',
                                dataType: 'json',
                                contentType: 'application/json',
                                success: function(data) {
                                    var keys = data.keys;
                                    console.log(keys);
                                    var haveText = false;
                                    keys.forEach(function(key) {
                                        console.log(key);
                                        if(key.key=='text')
                                        {
                                            haveText = true;
                                        }
                                    });

                                    if(haveText)
                                    {
                                        AJS.$.ajax({
                                            url: '/rest/api/2/dashboard/' + dashboardId + '/items/' + gadgetId + '/properties/' + 'text',
                                            type: 'GET',
                                            dataType: 'json',
                                            contentType: 'application/json',
                                            success: function(data) {
                                                var text = data.value.value;
                                                console.log(text);

                                                var editorContainer = AJS.$("#editor-container");
                                                var myPref = text || "这里是默认文本";
                                                console.log(myPref);
                                                var text = "<div id='editable-text' onclick='makeEditable()'>" + myPref + "</div>";
                                                console.log(text);
                                                var editableText = AJS.$(text);
                                                var saveButton = AJS.$("<button id='save-button' onclick='saveText()' style='display: none;'>保存文本</button>");

                                                editorContainer.append(editableText);
                                                saveButton.insertAfter(editableText); // 插入到文本块后面

                                                // 初始化时根据容器宽度自适应 Gadget 的高度
                                                var containerWidth = AJS.$('#editor-container').width();
                                                gadget.resize(containerWidth, 150); // 初始化高度为 150px
                                            },
                                            error: function(xhr, status, error) {
                                            }
                                        });
                                    }
                                    else
                                    {
                                        var editorContainer = AJS.$("#editor-container");
                                        var myPref = "这里是默认文本";
                                        console.log(myPref);
                                        var text = "<div id='editable-text' onclick='makeEditable()'>" + myPref + "</div>";
                                        console.log(text);
                                        var editableText = AJS.$(text);
                                        var saveButton = AJS.$("<button id='save-button' onclick='saveText()' style='display: none;'>保存文本</button>");

                                        editorContainer.append(editableText);
                                        saveButton.insertAfter(editableText); // 插入到文本块后面

                                        // 初始化时根据容器宽度自适应 Gadget 的高度
                                        var containerWidth = AJS.$('#editor-container').width();
                                        gadget.resize(containerWidth, 150); // 初始化高度为 150px
                                    }
                                },
                                error: function(xhr, status, error) {
                                }
                            });
                        },
                        args: [{
                            key: "versionData",
                            ajaxOptions: function() {
                                return {
                                    url: "/rest/jira-versions-gadget/1.0/versions.json"
                                };
                            }
                        }]
                    }
                });
            })();

            function makeEditable() {
                var text = document.getElementById("editable-text");
                var saveButton = document.getElementById("save-button");
                text.contentEditable = true;
                text.focus();
                saveButton.style.display = "inline";

                // 在编辑文本时调整 Gadget 的大小
                AJS.$('#editable-text').on('input', resizeGadget);

                // 在保存文本时调整 Gadget 的大小
                AJS.$('#save-button').on('click', saveText);
            }
            
   			function saveText() {
                // 此处是保存文本的代码...
                console.log(gadget);
                var currentText = AJS.$('#editable-text').text();
                console.log('当前文本内容: ' + currentText);

                gadget.savePref('myPref', currentText); 

                console.log('当前文本内容2: ' + gadget.getPref('myPref'));

                var dashboardId = window.parent.location.search.match(/selectPageId=(\d+)/)[1];
                console.log(dashboardId);
                var gadgetId = gadget.getPrefs().getModuleId();
                console.log("gadgetId " + gadgetId);

                AJS.$.ajax({
                    url: '/rest/api/2/dashboard/' + dashboardId + '/items/' + gadgetId + '/properties/' + 'text',
                    type: 'PUT',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify({ 'value': currentText }),
                    success: function() {
                        console.log('Data saved successfully.');
                    },
                    error: function(xhr, status, error) {
                        console.error('Failed to save data:', status, error);
                    }
                });
                AJS.$('#save-button').hide();
                // 调整 Gadget 的大小
                //resizeGadget();
                var iframe = window.frameElement;
                iframe.contentWindow.location.reload();
            }

            function getDashboardId() {
                var searchParams = new URLSearchParams(window.location.search);
                console.log(searchParams);
                var dashboardId = searchParams.get('dashboardId');
                return dashboardId;
            }

            function resizeGadget() {
                // 获得可编辑文本框的高度
                var textHeight = AJS.$('#editable-text')[0].scrollHeight;
                console.log('当前高度为：', textHeight);
                // 通过设置新的高度来调整 Gadget 的大小
                var newHeight = textHeight + 50;
                gadget.resize(AJS.$('#editor-container').width(), textHeight + 50);

                
                // 调整所属iframe的高度
                function adjustIframeHeight() {
                    var iframe = window.frameElement;
                    console.log(iframe);
                    
                    var height = document.documentElement.scrollHeight;
                    iframe.style.height = newHeight + 'px';
                    iframe.contentWindow.location.reload();
                }
                //adjustIframeHeight();

                
            }
        </script>
        ]]>
    </Content>
</Module>
